steps:
  - id: 'build-from-repo'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REPO_IMAGE}', '.']
  - id: 'push-build'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REPO_IMAGE}']
  - id: 'run-deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '${_SERVICE}', '--image', '${_REPO_IMAGE}', '--region', '${_REGION}', '--platform', 'managed', '--port', '8080', '--cpu', '1', '--memory', '512Mi', '--concurrency', '1', '--service-account', '${_SA_ID}', '--no-allow-unauthenticated', '--set-env-vars', 'TO_EMAILS=_TO_EMAILS', '--set-env-vars', 'SENDGRID_API_KEY=_SENDGRID_API_KEY']
  - id: 'policy-binding'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'services', 'add-iam-policy-binding', '${_SERVICE}', '--region', '${_REGION}', '--member', 'serviceAccount:${_SA_ID}', '--role', 'roles/run.invoker']
  - id: 'workflow-deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['workflows', 'deploy', '${_WORKFLOW}', --source', '${_WF_SOURCE}', '--location', '${_REGION}', '--service-account', '${_WF_SA}', '--description', 'load & dbt workflow', '--set-env-vars', 'RUN_SERVICE_URL=${_WF_SERVICE_URL}']
options:
  logging: CLOUD_LOGGING_ONLY
  #logsBucket: 'gs://build_logs_ici'

